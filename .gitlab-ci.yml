stages:
  - test
  - build
  - deploy

.yarn-cache: &yarn_cache
  key:
    files:
      - yarn.lock
  policy: pull-push
  paths:
    - .yarn-cache/

before_script:
  - echo 'yarn-offline-mirror ".yarn-cache/"' >> .yarnrc
  - echo 'yarn-offline-mirror-pruning true' >> .yarnrc

test:
  stage: test
  image: node:16-alpine
  cache:
    - <<: *yarn_cache
  script:
    - yarn install --frozen-lockfile --no-progress
    - yarn lint
    - yarn test

build:
  stage: build
  image: docker
  services:
    - docker:dind
  cache:
    - <<: *yarn_cache
  only:
    refs:
      - develop
  before_script:
    - mkdir -p ~/.docker
    - cp $REGISTRY_DG_AUTH ~/.docker/config.json
  script:
    - docker build
      --build-arg api_url="${API_URL}"
      --build-arg sentry_dsn="${NEXT_PUBLIC_SENTRY_DSN}"
      --build-arg sentry_auth_token="${SENTRY_AUTH_TOKEN}"
      --build-arg sentry_org="${SENTRY_ORG}"
      --build-arg sentry_project="${SENTRY_PROJECT}"
      --build-arg sentry_url="${SENTRY_URL}"
      -t ${REGISTRY_PATH}/next-seed .
    - docker push ${REGISTRY_PATH}/next-seed

deploy:
  image:
    name: bitnami/kubectl
    entrypoint: ['']
  stage: deploy
  tags:
    - new-k8s-homolog
  only:
    refs:
      - develop
  script:
    - kubectl rollout restart deployment next-seed-web -n nest-seed-ns
